<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- DataSource 설정 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
		<property name="username" value="spring" />
		<property name="password" value="1234" />
	</bean> -->
	
	<context:property-placeholder location="classpath:config/database.properties" />
	
	<!-- 프로퍼티 파일을 활용한 DataSource 설정 2 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- <context:component-scan base-package="polymorphism"></context:component-scan> -->
	<!-- <context:component-scan base-package="com.springbook.biz"></context:component-scan> -->
	
	<!-- 
	<bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
			<property name="userDAO" ref="userDAO" />
	</bean>
	 -->
	<!-- <bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO" /> -->
	
	
 	
	<!-- <bean id="log" class="com.springbook.biz.common.LogAdvice" />
	<bean id="log" class="com.springbook.biz.common.Log4jAdvice" />
	<bean id="before" class="com.springbook.biz.common.BeforeAdvice" />
	<bean id="afterThrowing" class="com.springbook.biz.common.AftefThrowingAdvice" />
	<bean id="afterReturning" class="com.springbook.biz.common.AftefReturningAdvice" />
	<bean id="after" class="com.springbook.biz.common.AfterAdvice" />
	<bean id="around" class="com.springbook.biz.common.AroundAdvice" /> -->
	
	
	<!-- <aop:config> -->
		<!-- <aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" /> -->
		<!-- <aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))"/> -->
		
		<!-- <aop:aspect ref="log">
			<aop:before pointcut-ref="allPointcut" method="printLogging"/>
			<aop:after pointcut-ref="getPointcut" method="printLogging"/>
			<aop:before pointcut-ref="allPointcut" method="beforeLog"/>
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="before">
			<aop:before pointcut-ref="allPointcut" method="beforeLog"/>
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="afterReturning">
			<aop:after-returning method="afterLog" returning="returnObj" pointcut-ref="allPointcut"/>
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="afterThrowing">
			<aop:after-throwing method="exceptionLog" throwing="exceptObj" pointcut-ref="allPointcut"/>
		</aop:aspect> -->

		<!-- <aop:aspect ref="after">
			<aop:after-throwing method="finallyLog" pointcut-ref="allPointcut"/>
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="around">
			<aop:around method="aroundLog" pointcut-ref="allPointcut"/>
		</aop:aspect> -->
		
	<!-- </aop:config> -->
	
	
</beans>


<!-- <bean id="tv" class="polymorphism.SamsungTV" p:speaker-ref="sony"
		p:price="2700000">

		<property name="speaker" ref="apple"></property> <property name="price" 
			value="2700000"></property>
		<constructor-arg index="0" ref="apple"></constructor-arg> <constructor-arg 
			index="1" value="2700000"></constructor-arg>
	</bean>

	<bean id="sony" class="polymorphism.SonySpeaker" />

	<bean id="apple" class="polymorphism.AppleSpeaker" />

	<bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean">
		<property name="addressList">
			<list> 
				<value>서울시 강남구 역삼동</value> 
				<value>서울시 성동구 행당동</value> 
			</list> 
			<set value-type="java.lang.String"> 
				<value>서울시 강남구 역삼동</value> 
				<value>서울시 성동구 성수동</value> 
				<value>서울시 성동구 성수동</value> 
			</set>

			<map>
				<entry>
					<key>
						<value>고길동</value>
					</key>
					<value>서울시 강남구 역삼동</value>
				</entry>
				<entry>
					<key>
						<value>마이콜</value>
					</key>
					<value>서울시 강서구 화곡동</value>
				</entry>
			</map>
		</property>
	</bean> -->

	<!-- <bean id="lg" class="polymorphism.LgTV"> </bean> -->

